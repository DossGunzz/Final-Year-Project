#include "TRIGGER_WIFI.h"              
#include "TRIGGER_GOOGLESHEETS.h"      
#include <Adafruit_Sensor.h>
#include <Adafruit_BME680.h>
#include <ESPAsyncTCP.h>
#include <ESPAsyncWiFiManager.h>



char column_name_in_sheets[ ][30] = {"Temp","Humi","Pres","Gas"};                       
String Sheets_GAS_ID = "AKfycbxL_Es5W08_pNLg-KFMzzUsTfSBcGn5zVb7N-lsYxP21MZ_Ssz2";                                        
int No_of_Parameters = 4;                                                               
Adafruit_BME680 bme; // I2C

AsyncWebServer server(80);
DNSServer dns;

float temperature; 
float humidity;
float pressure;
float gasResistance;

unsigned long lastTime = 0;  


void getBME680Readings(){
  unsigned long endTime = bme.beginReading();
  if (endTime == 0) {
    Serial.println(F("Failed to begin reading :("));
    return;
  }
  if (!bme.endReading()) {
    Serial.println(F("Failed to complete reading :("));
    return;
  }
  temperature = bme.temperature;
  pressure = bme.pressure / 100.0;
  humidity = bme.humidity;
  gasResistance = bme.gas_resistance / 1000.0;
}

String processor(const String& var){
  getBME680Readings();
  if(var == "TEMPERATURE"){
    return String(temperature);
  }
  else if(var == "HUMIDITY"){
    return String(humidity);
  }
  else if(var == "PRESSURE"){
    return String(pressure);
  }
  else if(var == "GAS"){
    return String(gasResistance);
  } return String();
}
void setup() 
{
  Serial.begin(9600);
  while (!Serial);

  if (!bme.begin()) {
    Serial.println(F("Could not find a valid BME680 sensor, check wiring!"));
    while (1);
  }
  bme.setTemperatureOversampling(BME680_OS_8X);
  bme.setHumidityOversampling(BME680_OS_2X);
  bme.setPressureOversampling(BME680_OS_4X);
  bme.setIIRFilterSize(BME680_FILTER_SIZE_3);
  bme.setGasHeater(320, 150);

  AsyncWiFiManager wifiManager(&server,&dns);
  wifiManager.startConfigPortal("Mask1");
                                      
  Google_Sheets_Init(column_name_in_sheets, Sheets_GAS_ID, No_of_Parameters );            
}
void loop() 
{
  getBME680Readings();
  
  Data_to_Sheets(No_of_Parameters,  temperature,  humidity, pressure, gasResistance);                                                                                                 
}
